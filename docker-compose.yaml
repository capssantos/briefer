version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: 'briefer'
      POSTGRES_USER: ${POSTGRES_USERNAME:?error}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?error}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USERNAME:?error} -d briefer || exit 1']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  db_migration:
    image: briefercloud/briefer-api
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    working_dir: /app/packages/database
    command: ['npx', 'prisma', 'migrate', 'deploy']
    environment:
      NODE_ENV: 'production'
      POSTGRES_PRISMA_URL: 'postgresql://${POSTGRES_USERNAME:?error}:${POSTGRES_PASSWORD:?error}@postgres:5432/briefer?schema=public'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - briefer_code:/app  # 游댠 Corrige erro de diret칩rio

  web:
    image: briefercloud/briefer-web
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    environment:
      NODE_ENV: 'production'
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - briefer_code:/app  # 游댠 Corrige erro de diret칩rio

  api:
    image: briefercloud/briefer-api
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      NODE_ENV: 'production'
      LOG_LEVEL: 'debug'
      API_URL: '/api'
      FRONTEND_URL: '/'
      POSTGRES_USERNAME: ${POSTGRES_USERNAME:?error}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?error}
      POSTGRES_HOSTNAME: 'postgres'
      POSTGRES_PORT: '5432'
      POSTGRES_DATABASE: 'briefer'
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8080/readyz || exit 1']
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - briefer_code:/app  # 游댠 Corrige erro de diret칩rio

  nginx:
    image: nginx:1.27
    depends_on:
      - web
      - api
    ports:
      - '3500:3000'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always

volumes:
  briefer_code:
    driver: local  # 游댠 Garante que um volume v치lido seja montado
  postgres_data:
